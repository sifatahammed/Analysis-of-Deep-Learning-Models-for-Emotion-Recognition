{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"18QC5zFYw3OHmVwR-vWE6Imc5-K75vPFB","timestamp":1736643959952},{"file_id":"1rhNpEaDhKKC2x7Lnkl6be8y0Xn8D0yOl","timestamp":1711200359767},{"file_id":"1ueh7CNGQoUq_2yWirdSsw8cSo7VAF3Ys","timestamp":1710665306446}],"mount_file_id":"18QC5zFYw3OHmVwR-vWE6Imc5-K75vPFB","authorship_tag":"ABX9TyPtIHR1rsXwx5klfOivAu59"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dCYW3DjW2J0F","executionInfo":{"status":"ok","timestamp":1712666799529,"user_tz":-360,"elapsed":17951,"user":{"displayName":"Sifat","userId":"11049362050401956201"}},"outputId":"b16f8a93-6255-48f5-cb5a-dbd85beca85c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["!pip install mne"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2GqsY1Ti2sT3","executionInfo":{"status":"ok","timestamp":1712666821758,"user_tz":-360,"elapsed":11954,"user":{"displayName":"Sifat","userId":"11049362050401956201"}},"outputId":"30755b35-d245-4dfa-c6b9-53b7129938d7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting mne\n","  Downloading mne-1.6.1-py3-none-any.whl (8.3 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m8.3/8.3 MB\u001b[0m \u001b[31m16.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy>=1.21.2 in /usr/local/lib/python3.10/dist-packages (from mne) (1.25.2)\n","Requirement already satisfied: scipy>=1.7.1 in /usr/local/lib/python3.10/dist-packages (from mne) (1.11.4)\n","Requirement already satisfied: matplotlib>=3.5.0 in /usr/local/lib/python3.10/dist-packages (from mne) (3.7.1)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from mne) (4.66.2)\n","Requirement already satisfied: pooch>=1.5 in /usr/local/lib/python3.10/dist-packages (from mne) (1.8.1)\n","Requirement already satisfied: decorator in /usr/local/lib/python3.10/dist-packages (from mne) (4.4.2)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from mne) (24.0)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from mne) (3.1.3)\n","Requirement already satisfied: lazy-loader>=0.3 in /usr/local/lib/python3.10/dist-packages (from mne) (0.3)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.5.0->mne) (1.2.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.5.0->mne) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.5.0->mne) (4.50.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.5.0->mne) (1.4.5)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.5.0->mne) (9.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.5.0->mne) (3.1.2)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.5.0->mne) (2.8.2)\n","Requirement already satisfied: platformdirs>=2.5.0 in /usr/local/lib/python3.10/dist-packages (from pooch>=1.5->mne) (4.2.0)\n","Requirement already satisfied: requests>=2.19.0 in /usr/local/lib/python3.10/dist-packages (from pooch>=1.5->mne) (2.31.0)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->mne) (2.1.5)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib>=3.5.0->mne) (1.16.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->pooch>=1.5->mne) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->pooch>=1.5->mne) (3.6)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->pooch>=1.5->mne) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->pooch>=1.5->mne) (2024.2.2)\n","Installing collected packages: mne\n","Successfully installed mne-1.6.1\n"]}]},{"cell_type":"code","source":["import numpy as np\n","import mne  # For EEG data preprocessing and feature extraction\n","from tensorflow.keras import layers, models\n","import matplotlib.pyplot as plt\n"],"metadata":{"id":"5HQAcRY08b9x"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import mne\n","import os\n","\n","# Specify the folder path (replace with your actual path)\n","folder_path = \"/content/drive/MyDrive/EEG DATASET\"\n","\n","# Error handling: Check if folder exists\n","if not os.path.exists(folder_path):\n","    raise ValueError(f\"Folder '{folder_path}' does not exist. Please provide a valid path.\")\n","\n","# Create an empty list to store the files (optional)\n","files = []\n","\n","# Iterate through files in the folder using os.listdir()\n","for filename in os.listdir(folder_path):\n","    # Check if it's a file (not a directory) using os.path.isfile()\n","    if os.path.isfile(os.path.join(folder_path, filename)):\n","        # Construct the full path to the file\n","        full_path = os.path.join(folder_path, filename)\n","\n","        # Load the file using mne.io.read() (replace with specific MNE function if needed)\n","        data = mne.io.read_raw_cnt(full_path)\n","\n","        # Process the data (replace with your specific operations)\n","        print(f\"Processing file: {filename}\")\n","        # ... your data processing logic here ...\n","\n","        # Optionally, add the file to the list (if needed)\n","        files.append(data)\n","\n","\n"],"metadata":{"id":"GLo-k5ylJjKo","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1712666869843,"user_tz":-360,"elapsed":13580,"user":{"displayName":"Sifat","userId":"11049362050401956201"}},"outputId":"d1ffa88f-1cf0-457f-a438-0bac95b14e86"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-4-15bfd2a69edd>:22: RuntimeWarning:   Could not parse meas date from the header. Setting to None.\n","  data = mne.io.read_raw_cnt(full_path)\n"]},{"output_type":"stream","name":"stdout","text":["Processing file: 2_2_20180419.cnt\n","Processing file: 1_2_20180810.cnt\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-4-15bfd2a69edd>:22: RuntimeWarning:   Could not parse meas date from the header. Setting to None.\n","  data = mne.io.read_raw_cnt(full_path)\n"]},{"output_type":"stream","name":"stdout","text":["Processing file: 3_2_20180419.cnt\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-4-15bfd2a69edd>:22: RuntimeWarning:   Could not parse meas date from the header. Setting to None.\n","  data = mne.io.read_raw_cnt(full_path)\n"]},{"output_type":"stream","name":"stdout","text":["Processing file: 4_2_20180417.cnt\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-4-15bfd2a69edd>:22: RuntimeWarning:   Could not parse meas date from the header. Setting to None.\n","  data = mne.io.read_raw_cnt(full_path)\n"]},{"output_type":"stream","name":"stdout","text":["Processing file: 5_2_20180728.cnt\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-4-15bfd2a69edd>:22: RuntimeWarning:   Could not parse meas date from the header. Setting to None.\n","  data = mne.io.read_raw_cnt(full_path)\n"]},{"output_type":"stream","name":"stdout","text":["Processing file: 6_2_20180731.cnt\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-4-15bfd2a69edd>:22: RuntimeWarning:   Could not parse meas date from the header. Setting to None.\n","  data = mne.io.read_raw_cnt(full_path)\n"]},{"output_type":"stream","name":"stdout","text":["Processing file: 7_2_20180418.cnt\n","Processing file: 8_2_20180802.cnt\n","Processing file: 9_2_20180804.cnt\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-4-15bfd2a69edd>:22: RuntimeWarning:   Could not parse meas date from the header. Setting to None.\n","  data = mne.io.read_raw_cnt(full_path)\n"]},{"output_type":"stream","name":"stdout","text":["Processing file: 10_2_20180524.cnt\n","Processing file: 11_2_20180508.cnt\n","Processing file: 12_2_20180508.cnt\n","Processing file: 13_2_20180806.cnt\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-4-15bfd2a69edd>:22: RuntimeWarning:   Could not parse meas date from the header. Setting to None.\n","  data = mne.io.read_raw_cnt(full_path)\n"]},{"output_type":"stream","name":"stdout","text":["Processing file: 14_2_20180423.cnt\n","Processing file: 15_2_20180807.cnt\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-4-15bfd2a69edd>:22: RuntimeWarning:   Could not parse meas date from the header. Setting to None.\n","  data = mne.io.read_raw_cnt(full_path)\n"]},{"output_type":"stream","name":"stdout","text":["Processing file: 16_2_20180815.cnt\n"]}]},{"cell_type":"code","source":["for file in files:\n","  print(file.info)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rK4xDkGdQu6m","executionInfo":{"status":"ok","timestamp":1712666890806,"user_tz":-360,"elapsed":499,"user":{"displayName":"Sifat","userId":"11049362050401956201"}},"outputId":"3a2be78e-54e2-4cee-df9d-938472b65a8e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<Info | 9 non-empty values\n"," bads: []\n"," ch_names: FP1, FPZ, FP2, AF3, AF4, F7, F5, F3, F1, FZ, F2, F4, F6, F8, ...\n"," chs: 66 EEG\n"," custom_ref_applied: False\n"," dig: 69 items (3 Cardinal, 66 EEG)\n"," highpass: 0.0 Hz\n"," lowpass: 500.0 Hz\n"," meas_date: unspecified\n"," nchan: 66\n"," projs: []\n"," sfreq: 1000.0 Hz\n"," subject_info: 5 items (dict)\n",">\n","<Info | 9 non-empty values\n"," bads: []\n"," ch_names: FP1, FPZ, FP2, AF3, AF4, F7, F5, F3, F1, FZ, F2, F4, F6, F8, ...\n"," chs: 66 EEG\n"," custom_ref_applied: False\n"," dig: 69 items (3 Cardinal, 66 EEG)\n"," highpass: 0.0 Hz\n"," lowpass: 500.0 Hz\n"," meas_date: 2018-10-08 11:18:17 UTC\n"," nchan: 66\n"," projs: []\n"," sfreq: 1000.0 Hz\n"," subject_info: 5 items (dict)\n",">\n","<Info | 9 non-empty values\n"," bads: []\n"," ch_names: FP1, FPZ, FP2, AF3, AF4, F7, F5, F3, F1, FZ, F2, F4, F6, F8, ...\n"," chs: 66 EEG\n"," custom_ref_applied: False\n"," dig: 69 items (3 Cardinal, 66 EEG)\n"," highpass: 0.0 Hz\n"," lowpass: 500.0 Hz\n"," meas_date: unspecified\n"," nchan: 66\n"," projs: []\n"," sfreq: 1000.0 Hz\n"," subject_info: 5 items (dict)\n",">\n","<Info | 9 non-empty values\n"," bads: []\n"," ch_names: FP1, FPZ, FP2, AF3, AF4, F7, F5, F3, F1, FZ, F2, F4, F6, F8, ...\n"," chs: 66 EEG\n"," custom_ref_applied: False\n"," dig: 69 items (3 Cardinal, 66 EEG)\n"," highpass: 0.0 Hz\n"," lowpass: 500.0 Hz\n"," meas_date: unspecified\n"," nchan: 66\n"," projs: []\n"," sfreq: 1000.0 Hz\n"," subject_info: 5 items (dict)\n",">\n","<Info | 9 non-empty values\n"," bads: []\n"," ch_names: FP1, FPZ, FP2, AF3, AF4, F7, F5, F3, F1, FZ, F2, F4, F6, F8, ...\n"," chs: 66 EEG\n"," custom_ref_applied: False\n"," dig: 69 items (3 Cardinal, 66 EEG)\n"," highpass: 0.0 Hz\n"," lowpass: 500.0 Hz\n"," meas_date: unspecified\n"," nchan: 66\n"," projs: []\n"," sfreq: 1000.0 Hz\n"," subject_info: 5 items (dict)\n",">\n","<Info | 9 non-empty values\n"," bads: []\n"," ch_names: FP1, FPZ, FP2, AF3, AF4, F7, F5, F3, F1, FZ, F2, F4, F6, F8, ...\n"," chs: 66 EEG\n"," custom_ref_applied: False\n"," dig: 69 items (3 Cardinal, 66 EEG)\n"," highpass: 0.0 Hz\n"," lowpass: 500.0 Hz\n"," meas_date: unspecified\n"," nchan: 66\n"," projs: []\n"," sfreq: 1000.0 Hz\n"," subject_info: 5 items (dict)\n",">\n","<Info | 9 non-empty values\n"," bads: []\n"," ch_names: FP1, FPZ, FP2, AF3, AF4, F7, F5, F3, F1, FZ, F2, F4, F6, F8, ...\n"," chs: 66 EEG\n"," custom_ref_applied: False\n"," dig: 69 items (3 Cardinal, 66 EEG)\n"," highpass: 0.0 Hz\n"," lowpass: 500.0 Hz\n"," meas_date: unspecified\n"," nchan: 66\n"," projs: []\n"," sfreq: 1000.0 Hz\n"," subject_info: 5 items (dict)\n",">\n","<Info | 9 non-empty values\n"," bads: []\n"," ch_names: FP1, FPZ, FP2, AF3, AF4, F7, F5, F3, F1, FZ, F2, F4, F6, F8, ...\n"," chs: 66 EEG\n"," custom_ref_applied: False\n"," dig: 69 items (3 Cardinal, 66 EEG)\n"," highpass: 0.0 Hz\n"," lowpass: 500.0 Hz\n"," meas_date: 2018-02-08 03:24:26 UTC\n"," nchan: 66\n"," projs: []\n"," sfreq: 1000.0 Hz\n"," subject_info: 5 items (dict)\n",">\n","<Info | 9 non-empty values\n"," bads: []\n"," ch_names: FP1, FPZ, FP2, AF3, AF4, F7, F5, F3, F1, FZ, F2, F4, F6, F8, ...\n"," chs: 66 EEG\n"," custom_ref_applied: False\n"," dig: 69 items (3 Cardinal, 66 EEG)\n"," highpass: 0.0 Hz\n"," lowpass: 500.0 Hz\n"," meas_date: 2018-04-08 08:34:07 UTC\n"," nchan: 66\n"," projs: []\n"," sfreq: 1000.0 Hz\n"," subject_info: 5 items (dict)\n",">\n","<Info | 9 non-empty values\n"," bads: []\n"," ch_names: FP1, FPZ, FP2, AF3, AF4, F7, F5, F3, F1, FZ, F2, F4, F6, F8, ...\n"," chs: 66 EEG\n"," custom_ref_applied: False\n"," dig: 69 items (3 Cardinal, 66 EEG)\n"," highpass: 0.0 Hz\n"," lowpass: 500.0 Hz\n"," meas_date: unspecified\n"," nchan: 66\n"," projs: []\n"," sfreq: 1000.0 Hz\n"," subject_info: 5 items (dict)\n",">\n","<Info | 9 non-empty values\n"," bads: []\n"," ch_names: FP1, FPZ, FP2, AF3, AF4, F7, F5, F3, F1, FZ, F2, F4, F6, F8, ...\n"," chs: 66 EEG\n"," custom_ref_applied: False\n"," dig: 69 items (3 Cardinal, 66 EEG)\n"," highpass: 0.0 Hz\n"," lowpass: 500.0 Hz\n"," meas_date: 2018-08-05 11:40:58 UTC\n"," nchan: 66\n"," projs: []\n"," sfreq: 1000.0 Hz\n"," subject_info: 5 items (dict)\n",">\n","<Info | 9 non-empty values\n"," bads: []\n"," ch_names: FP1, FPZ, FP2, AF3, AF4, F7, F5, F3, F1, FZ, F2, F4, F6, F8, ...\n"," chs: 66 EEG\n"," custom_ref_applied: False\n"," dig: 69 items (3 Cardinal, 66 EEG)\n"," highpass: 0.0 Hz\n"," lowpass: 500.0 Hz\n"," meas_date: 2018-08-05 09:12:23 UTC\n"," nchan: 66\n"," projs: []\n"," sfreq: 1000.0 Hz\n"," subject_info: 5 items (dict)\n",">\n","<Info | 9 non-empty values\n"," bads: []\n"," ch_names: FP1, FPZ, FP2, AF3, AF4, F7, F5, F3, F1, FZ, F2, F4, F6, F8, ...\n"," chs: 66 EEG\n"," custom_ref_applied: False\n"," dig: 69 items (3 Cardinal, 66 EEG)\n"," highpass: 0.0 Hz\n"," lowpass: 500.0 Hz\n"," meas_date: 2018-06-08 02:49:30 UTC\n"," nchan: 66\n"," projs: []\n"," sfreq: 1000.0 Hz\n"," subject_info: 5 items (dict)\n",">\n","<Info | 9 non-empty values\n"," bads: []\n"," ch_names: FP1, FPZ, FP2, AF3, AF4, F7, F5, F3, F1, FZ, F2, F4, F6, F8, ...\n"," chs: 66 EEG\n"," custom_ref_applied: False\n"," dig: 69 items (3 Cardinal, 66 EEG)\n"," highpass: 0.0 Hz\n"," lowpass: 500.0 Hz\n"," meas_date: unspecified\n"," nchan: 66\n"," projs: []\n"," sfreq: 1000.0 Hz\n"," subject_info: 5 items (dict)\n",">\n","<Info | 9 non-empty values\n"," bads: []\n"," ch_names: FP1, FPZ, FP2, AF3, AF4, F7, F5, F3, F1, FZ, F2, F4, F6, F8, ...\n"," chs: 66 EEG\n"," custom_ref_applied: False\n"," dig: 69 items (3 Cardinal, 66 EEG)\n"," highpass: 0.0 Hz\n"," lowpass: 500.0 Hz\n"," meas_date: 2018-07-08 02:38:20 UTC\n"," nchan: 66\n"," projs: []\n"," sfreq: 1000.0 Hz\n"," subject_info: 5 items (dict)\n",">\n","<Info | 9 non-empty values\n"," bads: []\n"," ch_names: FP1, FPZ, FP2, AF3, AF4, F7, F5, F3, F1, FZ, F2, F4, F6, F8, ...\n"," chs: 66 EEG\n"," custom_ref_applied: False\n"," dig: 69 items (3 Cardinal, 66 EEG)\n"," highpass: 0.0 Hz\n"," lowpass: 500.0 Hz\n"," meas_date: unspecified\n"," nchan: 66\n"," projs: []\n"," sfreq: 1000.0 Hz\n"," subject_info: 5 items (dict)\n",">\n"]}]},{"cell_type":"code","source":["# check channel names\n","channels = []\n","def channel(raw):\n","  ch_names = raw.ch_names\n","  # drop non-used channels\n","  useless_ch = ['M1', 'M2', 'VEO', 'HEO']\n","  raw = raw.drop_channels(useless_ch)\n","  return raw\n","\n","for file in files:\n","  raw = channel(file)\n","  channels.append(raw)\n","\n","\n"],"metadata":{"id":"sai--jkv_GKK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["filter = []\n","def pre(raw):\n","  raw.load_data()\n","  raw = raw.filter(l_freq=0.5, h_freq=30)\n","  print(\"Original sampling frequency:\", raw.info['sfreq'], \"Hz\")\n","\n","  # Define the new sampling frequency after downsampling\n","  new_sfreq = 200  # for example, downsampling to 250 Hz\n","\n","  # Downsampling the data\n","  raw = raw.resample(sfreq=new_sfreq)\n","\n","  return raw\n","\n","for file in channels:\n","  raw = pre(file)\n","  filter.append(raw)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NG0U0o2Gw7Sv","executionInfo":{"status":"ok","timestamp":1712667813023,"user_tz":-360,"elapsed":882566,"user":{"displayName":"Sifat","userId":"11049362050401956201"}},"outputId":"6b110e97-0900-40c5-8529-a28f3fe29012"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Reading 0 ... 2904719  =      0.000 ...  2904.719 secs...\n","Filtering raw data in 1 contiguous segment\n","Setting up band-pass filter from 0.5 - 30 Hz\n","\n","FIR filter parameters\n","---------------------\n","Designing a one-pass, zero-phase, non-causal bandpass filter:\n","- Windowed time-domain design (firwin) method\n","- Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation\n","- Lower passband edge: 0.50\n","- Lower transition bandwidth: 0.50 Hz (-6 dB cutoff frequency: 0.25 Hz)\n","- Upper passband edge: 30.00 Hz\n","- Upper transition bandwidth: 7.50 Hz (-6 dB cutoff frequency: 33.75 Hz)\n","- Filter length: 6601 samples (6.601 s)\n","\n"]},{"output_type":"stream","name":"stderr","text":["[Parallel(n_jobs=1)]: Done  17 tasks      | elapsed:    2.2s\n"]},{"output_type":"stream","name":"stdout","text":["Original sampling frequency: 1000.0 Hz\n","Reading 0 ... 2850479  =      0.000 ...  2850.479 secs...\n","Filtering raw data in 1 contiguous segment\n","Setting up band-pass filter from 0.5 - 30 Hz\n","\n","FIR filter parameters\n","---------------------\n","Designing a one-pass, zero-phase, non-causal bandpass filter:\n","- Windowed time-domain design (firwin) method\n","- Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation\n","- Lower passband edge: 0.50\n","- Lower transition bandwidth: 0.50 Hz (-6 dB cutoff frequency: 0.25 Hz)\n","- Upper passband edge: 30.00 Hz\n","- Upper transition bandwidth: 7.50 Hz (-6 dB cutoff frequency: 33.75 Hz)\n","- Filter length: 6601 samples (6.601 s)\n","\n"]},{"output_type":"stream","name":"stderr","text":["[Parallel(n_jobs=1)]: Done  17 tasks      | elapsed:    2.0s\n"]},{"output_type":"stream","name":"stdout","text":["Original sampling frequency: 1000.0 Hz\n","Reading 0 ... 2860199  =      0.000 ...  2860.199 secs...\n","Filtering raw data in 1 contiguous segment\n","Setting up band-pass filter from 0.5 - 30 Hz\n","\n","FIR filter parameters\n","---------------------\n","Designing a one-pass, zero-phase, non-causal bandpass filter:\n","- Windowed time-domain design (firwin) method\n","- Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation\n","- Lower passband edge: 0.50\n","- Lower transition bandwidth: 0.50 Hz (-6 dB cutoff frequency: 0.25 Hz)\n","- Upper passband edge: 30.00 Hz\n","- Upper transition bandwidth: 7.50 Hz (-6 dB cutoff frequency: 33.75 Hz)\n","- Filter length: 6601 samples (6.601 s)\n","\n"]},{"output_type":"stream","name":"stderr","text":["[Parallel(n_jobs=1)]: Done  17 tasks      | elapsed:    2.1s\n"]},{"output_type":"stream","name":"stdout","text":["Original sampling frequency: 1000.0 Hz\n","Reading 0 ... 2852879  =      0.000 ...  2852.879 secs...\n","Filtering raw data in 1 contiguous segment\n","Setting up band-pass filter from 0.5 - 30 Hz\n","\n","FIR filter parameters\n","---------------------\n","Designing a one-pass, zero-phase, non-causal bandpass filter:\n","- Windowed time-domain design (firwin) method\n","- Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation\n","- Lower passband edge: 0.50\n","- Lower transition bandwidth: 0.50 Hz (-6 dB cutoff frequency: 0.25 Hz)\n","- Upper passband edge: 30.00 Hz\n","- Upper transition bandwidth: 7.50 Hz (-6 dB cutoff frequency: 33.75 Hz)\n","- Filter length: 6601 samples (6.601 s)\n","\n"]},{"output_type":"stream","name":"stderr","text":["[Parallel(n_jobs=1)]: Done  17 tasks      | elapsed:    2.5s\n"]},{"output_type":"stream","name":"stdout","text":["Original sampling frequency: 1000.0 Hz\n","Reading 0 ... 2856439  =      0.000 ...  2856.439 secs...\n","Filtering raw data in 1 contiguous segment\n","Setting up band-pass filter from 0.5 - 30 Hz\n","\n","FIR filter parameters\n","---------------------\n","Designing a one-pass, zero-phase, non-causal bandpass filter:\n","- Windowed time-domain design (firwin) method\n","- Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation\n","- Lower passband edge: 0.50\n","- Lower transition bandwidth: 0.50 Hz (-6 dB cutoff frequency: 0.25 Hz)\n","- Upper passband edge: 30.00 Hz\n","- Upper transition bandwidth: 7.50 Hz (-6 dB cutoff frequency: 33.75 Hz)\n","- Filter length: 6601 samples (6.601 s)\n","\n"]},{"output_type":"stream","name":"stderr","text":["[Parallel(n_jobs=1)]: Done  17 tasks      | elapsed:    2.5s\n"]},{"output_type":"stream","name":"stdout","text":["Original sampling frequency: 1000.0 Hz\n","Reading 0 ... 2843359  =      0.000 ...  2843.359 secs...\n","Filtering raw data in 1 contiguous segment\n","Setting up band-pass filter from 0.5 - 30 Hz\n","\n","FIR filter parameters\n","---------------------\n","Designing a one-pass, zero-phase, non-causal bandpass filter:\n","- Windowed time-domain design (firwin) method\n","- Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation\n","- Lower passband edge: 0.50\n","- Lower transition bandwidth: 0.50 Hz (-6 dB cutoff frequency: 0.25 Hz)\n","- Upper passband edge: 30.00 Hz\n","- Upper transition bandwidth: 7.50 Hz (-6 dB cutoff frequency: 33.75 Hz)\n","- Filter length: 6601 samples (6.601 s)\n","\n"]},{"output_type":"stream","name":"stderr","text":["[Parallel(n_jobs=1)]: Done  17 tasks      | elapsed:    2.0s\n"]},{"output_type":"stream","name":"stdout","text":["Original sampling frequency: 1000.0 Hz\n","Reading 0 ... 2848719  =      0.000 ...  2848.719 secs...\n","Filtering raw data in 1 contiguous segment\n","Setting up band-pass filter from 0.5 - 30 Hz\n","\n","FIR filter parameters\n","---------------------\n","Designing a one-pass, zero-phase, non-causal bandpass filter:\n","- Windowed time-domain design (firwin) method\n","- Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation\n","- Lower passband edge: 0.50\n","- Lower transition bandwidth: 0.50 Hz (-6 dB cutoff frequency: 0.25 Hz)\n","- Upper passband edge: 30.00 Hz\n","- Upper transition bandwidth: 7.50 Hz (-6 dB cutoff frequency: 33.75 Hz)\n","- Filter length: 6601 samples (6.601 s)\n","\n"]},{"output_type":"stream","name":"stderr","text":["[Parallel(n_jobs=1)]: Done  17 tasks      | elapsed:    2.0s\n"]},{"output_type":"stream","name":"stdout","text":["Original sampling frequency: 1000.0 Hz\n","Reading 0 ... 2892399  =      0.000 ...  2892.399 secs...\n","Filtering raw data in 1 contiguous segment\n","Setting up band-pass filter from 0.5 - 30 Hz\n","\n","FIR filter parameters\n","---------------------\n","Designing a one-pass, zero-phase, non-causal bandpass filter:\n","- Windowed time-domain design (firwin) method\n","- Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation\n","- Lower passband edge: 0.50\n","- Lower transition bandwidth: 0.50 Hz (-6 dB cutoff frequency: 0.25 Hz)\n","- Upper passband edge: 30.00 Hz\n","- Upper transition bandwidth: 7.50 Hz (-6 dB cutoff frequency: 33.75 Hz)\n","- Filter length: 6601 samples (6.601 s)\n","\n"]},{"output_type":"stream","name":"stderr","text":["[Parallel(n_jobs=1)]: Done  17 tasks      | elapsed:    2.1s\n"]},{"output_type":"stream","name":"stdout","text":["Original sampling frequency: 1000.0 Hz\n","Reading 0 ... 3031519  =      0.000 ...  3031.519 secs...\n","Filtering raw data in 1 contiguous segment\n","Setting up band-pass filter from 0.5 - 30 Hz\n","\n","FIR filter parameters\n","---------------------\n","Designing a one-pass, zero-phase, non-causal bandpass filter:\n","- Windowed time-domain design (firwin) method\n","- Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation\n","- Lower passband edge: 0.50\n","- Lower transition bandwidth: 0.50 Hz (-6 dB cutoff frequency: 0.25 Hz)\n","- Upper passband edge: 30.00 Hz\n","- Upper transition bandwidth: 7.50 Hz (-6 dB cutoff frequency: 33.75 Hz)\n","- Filter length: 6601 samples (6.601 s)\n","\n"]},{"output_type":"stream","name":"stderr","text":["[Parallel(n_jobs=1)]: Done  17 tasks      | elapsed:    2.8s\n"]},{"output_type":"stream","name":"stdout","text":["Original sampling frequency: 1000.0 Hz\n","Reading 0 ... 3269999  =      0.000 ...  3269.999 secs...\n","Filtering raw data in 1 contiguous segment\n","Setting up band-pass filter from 0.5 - 30 Hz\n","\n","FIR filter parameters\n","---------------------\n","Designing a one-pass, zero-phase, non-causal bandpass filter:\n","- Windowed time-domain design (firwin) method\n","- Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation\n","- Lower passband edge: 0.50\n","- Lower transition bandwidth: 0.50 Hz (-6 dB cutoff frequency: 0.25 Hz)\n","- Upper passband edge: 30.00 Hz\n","- Upper transition bandwidth: 7.50 Hz (-6 dB cutoff frequency: 33.75 Hz)\n","- Filter length: 6601 samples (6.601 s)\n","\n"]},{"output_type":"stream","name":"stderr","text":["[Parallel(n_jobs=1)]: Done  17 tasks      | elapsed:    2.5s\n"]},{"output_type":"stream","name":"stdout","text":["Original sampling frequency: 1000.0 Hz\n","Reading 0 ... 2869039  =      0.000 ...  2869.039 secs...\n","Filtering raw data in 1 contiguous segment\n","Setting up band-pass filter from 0.5 - 30 Hz\n","\n","FIR filter parameters\n","---------------------\n","Designing a one-pass, zero-phase, non-causal bandpass filter:\n","- Windowed time-domain design (firwin) method\n","- Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation\n","- Lower passband edge: 0.50\n","- Lower transition bandwidth: 0.50 Hz (-6 dB cutoff frequency: 0.25 Hz)\n","- Upper passband edge: 30.00 Hz\n","- Upper transition bandwidth: 7.50 Hz (-6 dB cutoff frequency: 33.75 Hz)\n","- Filter length: 6601 samples (6.601 s)\n","\n"]},{"output_type":"stream","name":"stderr","text":["[Parallel(n_jobs=1)]: Done  17 tasks      | elapsed:    2.1s\n"]},{"output_type":"stream","name":"stdout","text":["Original sampling frequency: 1000.0 Hz\n","Reading 0 ... 2877679  =      0.000 ...  2877.679 secs...\n","Filtering raw data in 1 contiguous segment\n","Setting up band-pass filter from 0.5 - 30 Hz\n","\n","FIR filter parameters\n","---------------------\n","Designing a one-pass, zero-phase, non-causal bandpass filter:\n","- Windowed time-domain design (firwin) method\n","- Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation\n","- Lower passband edge: 0.50\n","- Lower transition bandwidth: 0.50 Hz (-6 dB cutoff frequency: 0.25 Hz)\n","- Upper passband edge: 30.00 Hz\n","- Upper transition bandwidth: 7.50 Hz (-6 dB cutoff frequency: 33.75 Hz)\n","- Filter length: 6601 samples (6.601 s)\n","\n"]},{"output_type":"stream","name":"stderr","text":["[Parallel(n_jobs=1)]: Done  17 tasks      | elapsed:    2.2s\n"]},{"output_type":"stream","name":"stdout","text":["Original sampling frequency: 1000.0 Hz\n","Reading 0 ... 2895479  =      0.000 ...  2895.479 secs...\n","Filtering raw data in 1 contiguous segment\n","Setting up band-pass filter from 0.5 - 30 Hz\n","\n","FIR filter parameters\n","---------------------\n","Designing a one-pass, zero-phase, non-causal bandpass filter:\n","- Windowed time-domain design (firwin) method\n","- Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation\n","- Lower passband edge: 0.50\n","- Lower transition bandwidth: 0.50 Hz (-6 dB cutoff frequency: 0.25 Hz)\n","- Upper passband edge: 30.00 Hz\n","- Upper transition bandwidth: 7.50 Hz (-6 dB cutoff frequency: 33.75 Hz)\n","- Filter length: 6601 samples (6.601 s)\n","\n"]},{"output_type":"stream","name":"stderr","text":["[Parallel(n_jobs=1)]: Done  17 tasks      | elapsed:    2.2s\n"]},{"output_type":"stream","name":"stdout","text":["Original sampling frequency: 1000.0 Hz\n","Reading 0 ... 2867359  =      0.000 ...  2867.359 secs...\n","Filtering raw data in 1 contiguous segment\n","Setting up band-pass filter from 0.5 - 30 Hz\n","\n","FIR filter parameters\n","---------------------\n","Designing a one-pass, zero-phase, non-causal bandpass filter:\n","- Windowed time-domain design (firwin) method\n","- Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation\n","- Lower passband edge: 0.50\n","- Lower transition bandwidth: 0.50 Hz (-6 dB cutoff frequency: 0.25 Hz)\n","- Upper passband edge: 30.00 Hz\n","- Upper transition bandwidth: 7.50 Hz (-6 dB cutoff frequency: 33.75 Hz)\n","- Filter length: 6601 samples (6.601 s)\n","\n"]},{"output_type":"stream","name":"stderr","text":["[Parallel(n_jobs=1)]: Done  17 tasks      | elapsed:    2.1s\n"]},{"output_type":"stream","name":"stdout","text":["Original sampling frequency: 1000.0 Hz\n","Reading 0 ... 3261359  =      0.000 ...  3261.359 secs...\n","Filtering raw data in 1 contiguous segment\n","Setting up band-pass filter from 0.5 - 30 Hz\n","\n","FIR filter parameters\n","---------------------\n","Designing a one-pass, zero-phase, non-causal bandpass filter:\n","- Windowed time-domain design (firwin) method\n","- Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation\n","- Lower passband edge: 0.50\n","- Lower transition bandwidth: 0.50 Hz (-6 dB cutoff frequency: 0.25 Hz)\n","- Upper passband edge: 30.00 Hz\n","- Upper transition bandwidth: 7.50 Hz (-6 dB cutoff frequency: 33.75 Hz)\n","- Filter length: 6601 samples (6.601 s)\n","\n"]},{"output_type":"stream","name":"stderr","text":["[Parallel(n_jobs=1)]: Done  17 tasks      | elapsed:    2.4s\n"]},{"output_type":"stream","name":"stdout","text":["Original sampling frequency: 1000.0 Hz\n","Reading 0 ... 2869719  =      0.000 ...  2869.719 secs...\n","Filtering raw data in 1 contiguous segment\n","Setting up band-pass filter from 0.5 - 30 Hz\n","\n","FIR filter parameters\n","---------------------\n","Designing a one-pass, zero-phase, non-causal bandpass filter:\n","- Windowed time-domain design (firwin) method\n","- Hamming window with 0.0194 passband ripple and 53 dB stopband attenuation\n","- Lower passband edge: 0.50\n","- Lower transition bandwidth: 0.50 Hz (-6 dB cutoff frequency: 0.25 Hz)\n","- Upper passband edge: 30.00 Hz\n","- Upper transition bandwidth: 7.50 Hz (-6 dB cutoff frequency: 33.75 Hz)\n","- Filter length: 6601 samples (6.601 s)\n","\n"]},{"output_type":"stream","name":"stderr","text":["[Parallel(n_jobs=1)]: Done  17 tasks      | elapsed:    2.1s\n"]},{"output_type":"stream","name":"stdout","text":["Original sampling frequency: 1000.0 Hz\n"]}]},{"cell_type":"code","source":["ref_filter = []\n","def filter2(raw):\n","  raw = raw.set_eeg_reference(ref_channels='average')\n","  return raw\n","\n","for file in filter:\n","  raw = filter2(file)\n","  ref_filter.append(raw)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A0X1szZZ0I9X","executionInfo":{"status":"ok","timestamp":1712667884821,"user_tz":-360,"elapsed":6646,"user":{"displayName":"Sifat","userId":"11049362050401956201"}},"outputId":"8fe20671-bc97-4867-d412-880ca5ecbdf3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["EEG channel type selected for re-referencing\n","Applying average reference.\n","Applying a custom ('EEG',) reference.\n","EEG channel type selected for re-referencing\n","Applying average reference.\n","Applying a custom ('EEG',) reference.\n","EEG channel type selected for re-referencing\n","Applying average reference.\n","Applying a custom ('EEG',) reference.\n","EEG channel type selected for re-referencing\n","Applying average reference.\n","Applying a custom ('EEG',) reference.\n","EEG channel type selected for re-referencing\n","Applying average reference.\n","Applying a custom ('EEG',) reference.\n","EEG channel type selected for re-referencing\n","Applying average reference.\n","Applying a custom ('EEG',) reference.\n","EEG channel type selected for re-referencing\n","Applying average reference.\n","Applying a custom ('EEG',) reference.\n","EEG channel type selected for re-referencing\n","Applying average reference.\n","Applying a custom ('EEG',) reference.\n","EEG channel type selected for re-referencing\n","Applying average reference.\n","Applying a custom ('EEG',) reference.\n","EEG channel type selected for re-referencing\n","Applying average reference.\n","Applying a custom ('EEG',) reference.\n","EEG channel type selected for re-referencing\n","Applying average reference.\n","Applying a custom ('EEG',) reference.\n","EEG channel type selected for re-referencing\n","Applying average reference.\n","Applying a custom ('EEG',) reference.\n","EEG channel type selected for re-referencing\n","Applying average reference.\n","Applying a custom ('EEG',) reference.\n","EEG channel type selected for re-referencing\n","Applying average reference.\n","Applying a custom ('EEG',) reference.\n","EEG channel type selected for re-referencing\n","Applying average reference.\n","Applying a custom ('EEG',) reference.\n","EEG channel type selected for re-referencing\n","Applying average reference.\n","Applying a custom ('EEG',) reference.\n"]}]},{"cell_type":"code","source":["for i, raw in enumerate(ref_filter):\n","    filename = f'/content/drive/MyDrive/filter_eeg_1/ss_{i+1}_2.fif'\n","    raw.save(filename)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tAIebtvo1Ee3","executionInfo":{"status":"ok","timestamp":1712668207673,"user_tz":-360,"elapsed":46101,"user":{"displayName":"Sifat","userId":"11049362050401956201"}},"outputId":"518a280c-71d1-438f-fa9e-159b67fc6b81"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Writing /content/drive/MyDrive/filter_eeg_2/ss_1_2.fif\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-15-3591ea82ebd4>:3: RuntimeWarning: This filename (/content/drive/MyDrive/filter_eeg_2/ss_1_2.fif) does not conform to MNE naming conventions. All raw files should end with raw.fif, raw_sss.fif, raw_tsss.fif, _meg.fif, _eeg.fif, _ieeg.fif, raw.fif.gz, raw_sss.fif.gz, raw_tsss.fif.gz, _meg.fif.gz, _eeg.fif.gz or _ieeg.fif.gz\n","  raw.save(filename)\n"]},{"output_type":"stream","name":"stdout","text":["Closing /content/drive/MyDrive/filter_eeg_2/ss_1_2.fif\n","[done]\n","Writing /content/drive/MyDrive/filter_eeg_2/ss_2_2.fif\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-15-3591ea82ebd4>:3: RuntimeWarning: This filename (/content/drive/MyDrive/filter_eeg_2/ss_2_2.fif) does not conform to MNE naming conventions. All raw files should end with raw.fif, raw_sss.fif, raw_tsss.fif, _meg.fif, _eeg.fif, _ieeg.fif, raw.fif.gz, raw_sss.fif.gz, raw_tsss.fif.gz, _meg.fif.gz, _eeg.fif.gz or _ieeg.fif.gz\n","  raw.save(filename)\n"]},{"output_type":"stream","name":"stdout","text":["Closing /content/drive/MyDrive/filter_eeg_2/ss_2_2.fif\n","[done]\n","Writing /content/drive/MyDrive/filter_eeg_2/ss_3_2.fif\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-15-3591ea82ebd4>:3: RuntimeWarning: This filename (/content/drive/MyDrive/filter_eeg_2/ss_3_2.fif) does not conform to MNE naming conventions. All raw files should end with raw.fif, raw_sss.fif, raw_tsss.fif, _meg.fif, _eeg.fif, _ieeg.fif, raw.fif.gz, raw_sss.fif.gz, raw_tsss.fif.gz, _meg.fif.gz, _eeg.fif.gz or _ieeg.fif.gz\n","  raw.save(filename)\n"]},{"output_type":"stream","name":"stdout","text":["Closing /content/drive/MyDrive/filter_eeg_2/ss_3_2.fif\n","[done]\n","Writing /content/drive/MyDrive/filter_eeg_2/ss_4_2.fif\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-15-3591ea82ebd4>:3: RuntimeWarning: This filename (/content/drive/MyDrive/filter_eeg_2/ss_4_2.fif) does not conform to MNE naming conventions. All raw files should end with raw.fif, raw_sss.fif, raw_tsss.fif, _meg.fif, _eeg.fif, _ieeg.fif, raw.fif.gz, raw_sss.fif.gz, raw_tsss.fif.gz, _meg.fif.gz, _eeg.fif.gz or _ieeg.fif.gz\n","  raw.save(filename)\n"]},{"output_type":"stream","name":"stdout","text":["Closing /content/drive/MyDrive/filter_eeg_2/ss_4_2.fif\n","[done]\n","Writing /content/drive/MyDrive/filter_eeg_2/ss_5_2.fif\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-15-3591ea82ebd4>:3: RuntimeWarning: This filename (/content/drive/MyDrive/filter_eeg_2/ss_5_2.fif) does not conform to MNE naming conventions. All raw files should end with raw.fif, raw_sss.fif, raw_tsss.fif, _meg.fif, _eeg.fif, _ieeg.fif, raw.fif.gz, raw_sss.fif.gz, raw_tsss.fif.gz, _meg.fif.gz, _eeg.fif.gz or _ieeg.fif.gz\n","  raw.save(filename)\n"]},{"output_type":"stream","name":"stdout","text":["Closing /content/drive/MyDrive/filter_eeg_2/ss_5_2.fif\n","[done]\n","Writing /content/drive/MyDrive/filter_eeg_2/ss_6_2.fif\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-15-3591ea82ebd4>:3: RuntimeWarning: This filename (/content/drive/MyDrive/filter_eeg_2/ss_6_2.fif) does not conform to MNE naming conventions. All raw files should end with raw.fif, raw_sss.fif, raw_tsss.fif, _meg.fif, _eeg.fif, _ieeg.fif, raw.fif.gz, raw_sss.fif.gz, raw_tsss.fif.gz, _meg.fif.gz, _eeg.fif.gz or _ieeg.fif.gz\n","  raw.save(filename)\n"]},{"output_type":"stream","name":"stdout","text":["Closing /content/drive/MyDrive/filter_eeg_2/ss_6_2.fif\n","[done]\n","Writing /content/drive/MyDrive/filter_eeg_2/ss_7_2.fif\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-15-3591ea82ebd4>:3: RuntimeWarning: This filename (/content/drive/MyDrive/filter_eeg_2/ss_7_2.fif) does not conform to MNE naming conventions. All raw files should end with raw.fif, raw_sss.fif, raw_tsss.fif, _meg.fif, _eeg.fif, _ieeg.fif, raw.fif.gz, raw_sss.fif.gz, raw_tsss.fif.gz, _meg.fif.gz, _eeg.fif.gz or _ieeg.fif.gz\n","  raw.save(filename)\n"]},{"output_type":"stream","name":"stdout","text":["Closing /content/drive/MyDrive/filter_eeg_2/ss_7_2.fif\n","[done]\n","Writing /content/drive/MyDrive/filter_eeg_2/ss_8_2.fif\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-15-3591ea82ebd4>:3: RuntimeWarning: This filename (/content/drive/MyDrive/filter_eeg_2/ss_8_2.fif) does not conform to MNE naming conventions. All raw files should end with raw.fif, raw_sss.fif, raw_tsss.fif, _meg.fif, _eeg.fif, _ieeg.fif, raw.fif.gz, raw_sss.fif.gz, raw_tsss.fif.gz, _meg.fif.gz, _eeg.fif.gz or _ieeg.fif.gz\n","  raw.save(filename)\n"]},{"output_type":"stream","name":"stdout","text":["Closing /content/drive/MyDrive/filter_eeg_2/ss_8_2.fif\n","[done]\n","Writing /content/drive/MyDrive/filter_eeg_2/ss_9_2.fif\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-15-3591ea82ebd4>:3: RuntimeWarning: This filename (/content/drive/MyDrive/filter_eeg_2/ss_9_2.fif) does not conform to MNE naming conventions. All raw files should end with raw.fif, raw_sss.fif, raw_tsss.fif, _meg.fif, _eeg.fif, _ieeg.fif, raw.fif.gz, raw_sss.fif.gz, raw_tsss.fif.gz, _meg.fif.gz, _eeg.fif.gz or _ieeg.fif.gz\n","  raw.save(filename)\n"]},{"output_type":"stream","name":"stdout","text":["Closing /content/drive/MyDrive/filter_eeg_2/ss_9_2.fif\n","[done]\n","Writing /content/drive/MyDrive/filter_eeg_2/ss_10_2.fif\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-15-3591ea82ebd4>:3: RuntimeWarning: This filename (/content/drive/MyDrive/filter_eeg_2/ss_10_2.fif) does not conform to MNE naming conventions. All raw files should end with raw.fif, raw_sss.fif, raw_tsss.fif, _meg.fif, _eeg.fif, _ieeg.fif, raw.fif.gz, raw_sss.fif.gz, raw_tsss.fif.gz, _meg.fif.gz, _eeg.fif.gz or _ieeg.fif.gz\n","  raw.save(filename)\n"]},{"output_type":"stream","name":"stdout","text":["Closing /content/drive/MyDrive/filter_eeg_2/ss_10_2.fif\n","[done]\n","Writing /content/drive/MyDrive/filter_eeg_2/ss_11_2.fif\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-15-3591ea82ebd4>:3: RuntimeWarning: This filename (/content/drive/MyDrive/filter_eeg_2/ss_11_2.fif) does not conform to MNE naming conventions. All raw files should end with raw.fif, raw_sss.fif, raw_tsss.fif, _meg.fif, _eeg.fif, _ieeg.fif, raw.fif.gz, raw_sss.fif.gz, raw_tsss.fif.gz, _meg.fif.gz, _eeg.fif.gz or _ieeg.fif.gz\n","  raw.save(filename)\n"]},{"output_type":"stream","name":"stdout","text":["Closing /content/drive/MyDrive/filter_eeg_2/ss_11_2.fif\n","[done]\n","Writing /content/drive/MyDrive/filter_eeg_2/ss_12_2.fif\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-15-3591ea82ebd4>:3: RuntimeWarning: This filename (/content/drive/MyDrive/filter_eeg_2/ss_12_2.fif) does not conform to MNE naming conventions. All raw files should end with raw.fif, raw_sss.fif, raw_tsss.fif, _meg.fif, _eeg.fif, _ieeg.fif, raw.fif.gz, raw_sss.fif.gz, raw_tsss.fif.gz, _meg.fif.gz, _eeg.fif.gz or _ieeg.fif.gz\n","  raw.save(filename)\n"]},{"output_type":"stream","name":"stdout","text":["Closing /content/drive/MyDrive/filter_eeg_2/ss_12_2.fif\n","[done]\n","Writing /content/drive/MyDrive/filter_eeg_2/ss_13_2.fif\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-15-3591ea82ebd4>:3: RuntimeWarning: This filename (/content/drive/MyDrive/filter_eeg_2/ss_13_2.fif) does not conform to MNE naming conventions. All raw files should end with raw.fif, raw_sss.fif, raw_tsss.fif, _meg.fif, _eeg.fif, _ieeg.fif, raw.fif.gz, raw_sss.fif.gz, raw_tsss.fif.gz, _meg.fif.gz, _eeg.fif.gz or _ieeg.fif.gz\n","  raw.save(filename)\n"]},{"output_type":"stream","name":"stdout","text":["Closing /content/drive/MyDrive/filter_eeg_2/ss_13_2.fif\n","[done]\n","Writing /content/drive/MyDrive/filter_eeg_2/ss_14_2.fif\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-15-3591ea82ebd4>:3: RuntimeWarning: This filename (/content/drive/MyDrive/filter_eeg_2/ss_14_2.fif) does not conform to MNE naming conventions. All raw files should end with raw.fif, raw_sss.fif, raw_tsss.fif, _meg.fif, _eeg.fif, _ieeg.fif, raw.fif.gz, raw_sss.fif.gz, raw_tsss.fif.gz, _meg.fif.gz, _eeg.fif.gz or _ieeg.fif.gz\n","  raw.save(filename)\n"]},{"output_type":"stream","name":"stdout","text":["Closing /content/drive/MyDrive/filter_eeg_2/ss_14_2.fif\n","[done]\n","Writing /content/drive/MyDrive/filter_eeg_2/ss_15_2.fif\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-15-3591ea82ebd4>:3: RuntimeWarning: This filename (/content/drive/MyDrive/filter_eeg_2/ss_15_2.fif) does not conform to MNE naming conventions. All raw files should end with raw.fif, raw_sss.fif, raw_tsss.fif, _meg.fif, _eeg.fif, _ieeg.fif, raw.fif.gz, raw_sss.fif.gz, raw_tsss.fif.gz, _meg.fif.gz, _eeg.fif.gz or _ieeg.fif.gz\n","  raw.save(filename)\n"]},{"output_type":"stream","name":"stdout","text":["Closing /content/drive/MyDrive/filter_eeg_2/ss_15_2.fif\n","[done]\n","Writing /content/drive/MyDrive/filter_eeg_2/ss_16_2.fif\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-15-3591ea82ebd4>:3: RuntimeWarning: This filename (/content/drive/MyDrive/filter_eeg_2/ss_16_2.fif) does not conform to MNE naming conventions. All raw files should end with raw.fif, raw_sss.fif, raw_tsss.fif, _meg.fif, _eeg.fif, _ieeg.fif, raw.fif.gz, raw_sss.fif.gz, raw_tsss.fif.gz, _meg.fif.gz, _eeg.fif.gz or _ieeg.fif.gz\n","  raw.save(filename)\n"]},{"output_type":"stream","name":"stdout","text":["Closing /content/drive/MyDrive/filter_eeg_2/ss_16_2.fif\n","[done]\n"]}]},{"cell_type":"code","source":["data_files = []\n","for file in ref_filter:\n","  raw = file.get_data()\n","  data_files.append(raw)"],"metadata":{"id":"E_EsTxjqKlPO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","segment = []\n","\n","def apply_reference_and_baseline_correction(data, start_seconds, end_seconds, pre_stim_window, sampling_rate):\n","\n","  # Apply common average reference (CAR)\n","\n","\n","  # Perform trial-based baseline correction\n","  corrected_data = data.copy()\n","  for trial_idx, (start, end) in enumerate(zip(start_seconds, end_seconds)):\n","    # Calculate baseline window in samples (relative to trial start)\n","    baseline_start = int(max(0, (start - pre_stim_window) * sampling_rate))\n","    baseline_end = int(start * sampling_rate)\n","\n","    # Calculate baseline for each channel\n","    baseline = np.mean(corrected_data[:, baseline_start:baseline_end], axis=1).reshape(-1, 1)\n","\n","    # Apply baseline correction for the entire trial\n","    corrected_data[:, start_seconds[trial_idx]*sampling_rate:end_seconds[trial_idx]*sampling_rate] -= baseline\n","    corrected_data = (corrected_data - np.mean(corrected_data, axis=0)) / np.std(corrected_data, axis=0)\n","\n","  return corrected_data\n","\n","# segmentation according to label\n","start_seconds = [30, 132, 287, 555, 773, 982, 1271, 1628, 1730, 2025, 2227, 2435, 2667, 2932, 3204]\n","end_seconds = [102, 228, 524, 742, 920, 1240, 1568, 1697, 1994, 2166, 2401, 2607, 2901, 3172, 3359]\n","pre_stim_window = 0.2\n","sampling_rate = 200  # Hz (assuming you know your sampling rate)\n","\n","# Apply referencing and baseline correction\n","for data in data_files:\n","  raw = apply_reference_and_baseline_correction(data, start_seconds, end_seconds, pre_stim_window, sampling_rate)\n","  segment.append(raw)\n","\n","\n","\n"],"metadata":{"id":"ZNsDDnFj48dc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import os\n","import numpy as np\n","\n","def save(f, segment):# Directory to save CSV files\n","  save_dir = \"/content/drive/MyDrive/Thesis/data\"\n","  os.makedirs(save_dir, exist_ok=True)\n","\n","  # Save each trial into a separate CSV file\n","  for i, segment in enumerate(segment):\n","      csv_file = os.path.join(save_dir, f\"ss_{f}_{i+1}.csv\")\n","      np.savetxt(csv_file, segment, delimiter=\",\")\n","      print(f\"Saved file: {csv_file}\")\n","for gi in range(len(segment)):\n","  save(gi, segment[gi])"],"metadata":{"id":"5cwXTgHxOH3e"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7585,"status":"ok","timestamp":1713489348768,"user":{"displayName":"Sifat","userId":"11049362050401956201"},"user_tz":-360},"id":"AumNcq5P5q-H","outputId":"f6a61548-48ce-4534-bb05-aafc4dcc48e7"},"outputs":[{"name":"stdout","output_type":"stream","text":["(240, 62, 59400)\n"]}],"source":["#Zero-Padding\n","import numpy as np\n","\n","max_samples = max(trial.shape[1] for trial in trials)\n","\n","sample = np.zeros((len(trials), 62, max_samples))\n","\n","for i, trial in enumerate(trials):\n","  padding_length = max_samples - trial.shape[1]\n","  sample[i, :, :] = np.pad(trial, ((0, 0), (0, padding_length)), mode='constant', constant_values=0)\n","\n","print(sample.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vp_CHNZtjbr-"},"outputs":[],"source":["def average_pooling(segment):\n","\n","  # Convert segment to tensor (assuming data is a NumPy array)\n","  segment_tensor = tf.convert_to_tensor(segment, dtype=tf.float32)\n","  # Apply average pooling\n","  segment_tensor = tf.reshape(segment_tensor, [segment_tensor.shape[0], segment_tensor.shape[1], 1])\n","  pooled_segment = tf.keras.layers.AveragePooling2D(3,3)(\n","      tf.expand_dims(segment_tensor, axis=0))\n","  # Squeeze the dimension\n","\n","  return tf.squeeze(pooled_segment, axis=0)\n","\n","# Apply pooling to each data segment\n","pooled_data = [average_pooling(segment) for segment in trials]\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"psbeGy-vtqL6"},"outputs":[],"source":["pooled = []\n","for i in pooled_data:\n","  raw = tf.reshape(i,[i.shape[0], i.shape[1]])\n","  pooled.append(raw)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1431,"status":"ok","timestamp":1713262580507,"user":{"displayName":"Sifat","userId":"11049362050401956201"},"user_tz":-360},"id":"VgecYhZKsSRB","outputId":"7318827c-fe3b-4f8c-842a-627cbeeb3793"},"outputs":[{"name":"stdout","output_type":"stream","text":["(240, 20, 19800)\n"]}],"source":["#Average-Pooling\n","import numpy as np\n","\n","\n","max_samples = max(trial.shape[1] for trial in pooled)\n","\n","sample = np.zeros((len(pooled), 20, max_samples))\n","\n","for i, trial in enumerate(pooled):\n","  padding_length = max_samples - trial.shape[1]\n","  sample[i, :, :] = np.pad(trial, ((0, 0), (0, padding_length)), mode='constant', constant_values=0)\n","\n","print(sample.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":60706,"status":"ok","timestamp":1713262662017,"user":{"displayName":"Sifat","userId":"11049362050401956201"},"user_tz":-360},"id":"yEGhr99FcDgD","outputId":"a07dcd56-dead-473f-e98b-d244a8c1856c"},"outputs":[{"name":"stdout","output_type":"stream","text":["Saved file: /content/drive/MyDrive/pooled_data/s1.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s2.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s3.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s4.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s5.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s6.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s7.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s8.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s9.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s10.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s11.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s12.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s13.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s14.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s15.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s16.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s17.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s18.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s19.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s20.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s21.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s22.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s23.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s24.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s25.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s26.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s27.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s28.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s29.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s30.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s31.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s32.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s33.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s34.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s35.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s36.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s37.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s38.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s39.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s40.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s41.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s42.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s43.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s44.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s45.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s46.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s47.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s48.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s49.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s50.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s51.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s52.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s53.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s54.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s55.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s56.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s57.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s58.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s59.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s60.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s61.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s62.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s63.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s64.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s65.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s66.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s67.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s68.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s69.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s70.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s71.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s72.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s73.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s74.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s75.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s76.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s77.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s78.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s79.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s80.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s81.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s82.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s83.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s84.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s85.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s86.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s87.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s88.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s89.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s90.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s91.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s92.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s93.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s94.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s95.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s96.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s97.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s98.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s99.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s100.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s101.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s102.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s103.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s104.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s105.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s106.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s107.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s108.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s109.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s110.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s111.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s112.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s113.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s114.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s115.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s116.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s117.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s118.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s119.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s120.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s121.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s122.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s123.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s124.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s125.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s126.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s127.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s128.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s129.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s130.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s131.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s132.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s133.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s134.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s135.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s136.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s137.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s138.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s139.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s140.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s141.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s142.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s143.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s144.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s145.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s146.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s147.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s148.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s149.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s150.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s151.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s152.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s153.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s154.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s155.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s156.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s157.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s158.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s159.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s160.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s161.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s162.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s163.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s164.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s165.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s166.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s167.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s168.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s169.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s170.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s171.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s172.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s173.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s174.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s175.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s176.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s177.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s178.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s179.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s180.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s181.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s182.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s183.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s184.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s185.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s186.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s187.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s188.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s189.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s190.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s191.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s192.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s193.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s194.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s195.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s196.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s197.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s198.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s199.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s200.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s201.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s202.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s203.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s204.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s205.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s206.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s207.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s208.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s209.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s210.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s211.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s212.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s213.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s214.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s215.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s216.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s217.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s218.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s219.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s220.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s221.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s222.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s223.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s224.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s225.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s226.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s227.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s228.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s229.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s230.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s231.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s232.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s233.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s234.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s235.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s236.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s237.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s238.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s239.csv\n","(20, 19800)\n","Saved file: /content/drive/MyDrive/pooled_data/s240.csv\n","(20, 19800)\n"]}],"source":["import os\n","import numpy as np\n","\n","def save(i, segment):# Directory to save CSV files\n","  save_dir = \"/content/drive/MyDrive/pooled_data\"\n","  os.makedirs(save_dir, exist_ok=True)\n","\n","\n","  csv_file = os.path.join(save_dir, f\"s{i+1}.csv\")\n","  np.savetxt(csv_file, segment, delimiter=\",\")\n","  print(f\"Saved file: {csv_file}\")\n","for i, segment in enumerate(sample):\n","  save(i, segment)\n","  print(segment.shape)"]}]}